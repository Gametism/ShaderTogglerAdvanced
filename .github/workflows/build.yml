name: Build ShaderToggler (auto-detect, x86 & x64)

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    strategy:
      matrix:
        platform: [x64, Win32]

    steps:
      - uses: actions/checkout@v4
      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v2

      - name: Locate project
        id: findproj
        shell: pwsh
        run: |
          $cands = Get-ChildItem -Recurse -Filter *.vcxproj | Select-Object -Expand FullName
          if (-not $cands) { Write-Error "No .vcxproj found"; exit 1 }
          $proj = $cands | Where-Object { $_ -like "*ShaderToggler.vcxproj" } | Select-Object -First 1
          if (-not $proj) { $proj = $cands | Select-Object -First 1 }
          echo "PROJ=$proj" >> $env:GITHUB_OUTPUT
          Write-Host "Using project: $proj"

      - name: Build ${{ matrix.platform }} Release
        run: >
          msbuild "${{ steps.findproj.outputs.PROJ }}"
          /p:Configuration=Release
          /p:Platform=${{ matrix.platform }}

      - name: Package .addon (auto-find output)
        shell: pwsh
        run: |
          $plat = "${{ matrix.platform }}"
          # Look for common output layouts:
          #  - ShaderToggler\<Platform>\Release\ShaderToggler.dll
          #  - <Platform>\Release\ShaderToggler.dll
          #  - Release\ShaderToggler.dll
          $dll = Get-ChildItem -Recurse -Filter ShaderToggler.dll `
            | Where-Object {
                $_.FullName -match "\\$plat\\Release\\" -or
                $_.FullName -match "ShaderToggler\\$plat\\Release\\" -or
                (($plat -eq 'Win32') -and $_.FullName -match "\\Release\\")
              } `
            | Sort-Object FullName `
            | Select-Object -First 1

          if (-not $dll) {
            Write-Host "Could not find ShaderToggler.dll automatically. Listing candidate folders:"
            Get-ChildItem -Recurse -Directory -Filter Release | ForEach-Object { $_.FullName }
            Write-Error "ShaderToggler.dll not found after build."
            exit 1
          }

          $out = Split-Path $dll.FullName
          Copy-Item "$($dll.FullName)" (Join-Path $out "ShaderToggler.addon") -Force
          Write-Host "Packaged .addon in: $out"
          Get-ChildItem $out

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ShaderToggler-${{ matrix.platform }}-Release
          path: |
            **/ShaderToggler/*/Release/ShaderToggler.dll
            **/ShaderToggler/*/Release/ShaderToggler.addon
            **/x64/Release/ShaderToggler.dll
            **/x64/Release/ShaderToggler.addon
            **/Win32/Release/ShaderToggler.dll
            **/Win32/Release/ShaderToggler.addon
            **/Release/ShaderToggler.dll
            **/Release/ShaderToggler.addon
