name: Build ShaderToggler (forced OutDir, x86 & x64)

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    strategy:
      matrix:
        platform: [x64, Win32]

    steps:
      - uses: actions/checkout@v4
      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v2

      - name: Locate project
        id: findproj
        shell: pwsh
        run: |
          $cands = Get-ChildItem -Recurse -Filter *.vcxproj | Select-Object -Expand FullName
          if (-not $cands) { Write-Error "No .vcxproj found"; exit 1 }
          $proj = $cands | Where-Object { $_ -like "*ShaderToggler.vcxproj" } | Select-Object -First 1
          if (-not $proj) { $proj = $cands | Select-Object -First 1 }
          echo "PROJ=$proj" >> $env:GITHUB_OUTPUT
          Write-Host "Using project: $proj"

      - name: Build ${{ matrix.platform }} Release (force OutDir)
        shell: pwsh
        run: |
          $plat = "${{ matrix.platform }}"
          $proj = "${{ steps.findproj.outputs.PROJ }}"
          $out = Join-Path (Get-Location) ("out\" + $plat + "\Release\")
          New-Item -ItemType Directory -Force -Path $out | Out-Null

          Write-Host "Building to: $out"
          msbuild $proj /p:Configuration=Release /p:Platform=$plat /p:OutDir="$out" /m /v:m

          Write-Host "Contents of $out after build:"
          if (Test-Path $out) { Get-ChildItem -Recurse $out } else { Write-Host "OutDir missing?" }

      - name: Package .addon
        shell: pwsh
        run: |
          $plat = "${{ matrix.platform }}"
          $out  = Join-Path (Get-Location) ("out\" + $plat + "\Release\")
          if (-not (Test-Path $out)) { Write-Error "Expected OutDir '$out' does not exist."; exit 1 }

          # Pick the newest DLL in OutDir
          $dll = Get-ChildItem -Path $out -Filter *.dll -File | Sort-Object LastWriteTime -Descending | Select-Object -First 1
          if (-not $dll) {
            # Maybe the project already produced an .addon
            $addon = Get-ChildItem -Path $out -Filter *.addon -File | Select-Object -First 1
            if ($addon) {
              Write-Host "Found existing .addon: $($addon.FullName)"
              exit 0
            }
            Write-Error "No DLL found in $out. Did the build produce a DLL?"
            exit 1
          }

          $addonPath = Join-Path $out "ShaderToggler.addon"
          Copy-Item $dll.FullName $addonPath -Force
          Write-Host "Created: $addonPath"
          Get-ChildItem $out

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ShaderToggler-${{ matrix.platform }}-Release
          path: |
            out/${{ matrix.platform }}/Release/*.dll
            out/${{ matrix.platform }}/Release/*.addon
